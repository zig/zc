class test_t {
    class lolo_t {
	var int titi;
	/*void __init() {
	    titi = 32;
	    }*/
	func int majoliemethode() {
	    return 42;
	}
	static func int gloubi() {
	    return 332;
	}
    }

    static var int boulga;
    var int a;
    var lolo_t *lala;

    func void __init() {
	a = 42;
	return;
	a = 32;
    }
    func void __init(int pa) {
	a = pa;
    }

    func test_t *jolie() {
	return this;
    }
    func int moche() {
	return 3;
    }

    /*boolean __operator_equal(test_t *other) {
	return a == other.a && lala == other.lala;
	}*/
    func boolean __operator_equal(int i) {
	return a == i;
    }

    static func float __operator_plus(float a, lolo_t *l) {
	return a + l.titi;
    }
    func float __operator_plus(float b) {
	return a + b;
    }
    
    /*static*/ func int with_closure() { // static is forbiden because the method access non static members
	this.toto(32, 5.3);
	return a;
    }

    func float toto(int x, float y)
    {
	var lolo_t *b;
	b = new lolo_t;

	/*class pipo_t {
	    int bambi;
	    int with_closure() {
		return x;
	    }
	    };

	    pipo_t world;*/

	x + y;
	b.titi = b.titi = 32;
	//(x + y) = 2.5;
	//3();
	lala = new lolo_t;
	this.lala.titi;
	jolie().a;
	//moche = 32; // bug !!
	//3.5 + moche;
	//moche;
	lala.titi + this.lala.majoliemethode();
	this + 3.5;
	//lala = null;
	return (a + x / y + a) * x + (b.titi = 4) + b;
    }
}

func int global_func() {
    return 42;
}

func test_t *passobj(test_t *in) {
    return in;
}

func void voidfunc() {
}

func test_t *newobj() {
    var test_t *test;
    test = new test_t;
    test.a = 42;
    return test;
}

func int takeobj(test_t *in) {
}

func boolean __operator_equal(test_t *a, test_t *other) {
    return a.a == other.a && a.lala == other.lala;
}
func int main() {
    var test_t *test;

    var int a, b;
    a = b = global_func();
    test = new test_t;

    passobj(passobj(test)).toto(2, 3.6);
    passobj(new test_t).toto(2, 3.6);
    test = newobj();
    takeobj(test);

    //null = 42;

    test_t.lolo_t.gloubi();
    test.lolo_t.gloubi();
    //test_t.boulga = 32;

    var null v;
    v = null;
    v = v;
    //var = true;

    int(32);

    var boolean bool;
    bool = !true;
    bool = !test;
    //if (voidfunc()) ;
    if (! !passobj(passobj(test_t())).toto(2, 3.6)) {
	bool = !null;
	bool = (test == null) && bool && test || -32;
	bool = test.lala == test_t.lolo_t();
	bool = test == new test_t;
	bool = test == 32;
	//bool = null;
    } else
	return -1;

    while (false) ;

    var int i;
    i = 'a.';
    i = 10000000;
    while (i > 0 || false) 
    {
	i = i - 1;
    }

    newobj().a;

    test_t.lolo_t();
    
    //var int a;

    //i = "hello";

    test = test_t();
    test = null;
    test = test_t(10);
    return int(test.toto(10, 3.5));
    //return newobj().a;
}

