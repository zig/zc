class test_t {
    class lolo_t {
	int titi;
	int majoliemethode() {
	    return 42;
	}
    }
    
    int a;
    lolo_t lala;

    test_t jolie() {
	return this;
    }
    int moche() {
	return 3;
    }

    static float __operator_plus(float a, lolo_t l) {
	return a + l.titi;
    }
    float __operator_plus(float b) {
	return a + b;
    }
    
    /*static*/ int with_closure() { // static is forbiden because the method access non static members
	this.toto(32, 5.3);
	return a;
    }

    float toto(int x, float y)
    {
	lolo_t b;
	b = new lolo_t;

	/*class pipo_t {
	    int bambi;
	    int with_closure() {
		return x;
	    }
	    };

	    pipo_t world;*/

	x + y;
	b.titi = b.titi = 32;
	//(x + y) = 2.5;
	//3();
	this.lala.titi;
	jolie().a;
	//moche = 32; // bug !!
	//3.5 + moche;
	//moche;
	lala.titi + this.lala.majoliemethode();
	this + 3.5;
	return (a + x / y + a) * x + (b.titi = 4) + b;
    }
}

int global_func() {
    return 42;
}

test_t passobj(test_t in) {
    return in;
}

test_t newobj() {
    return new test_t;
}

int takeobj(test_t in) {
}

float main() {
    test_t test;

    int a, b;
    a = b = global_func();
    test = new test_t;

    return test.toto(10, 3.5);
}
